name: PR Performance Check

on:
  pull_request:
    branches:
      - main
      - master
      - develop
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/workflows/pr-performance.yml'

jobs:
  quick-performance-check:
    name: Quick Performance Check
    runs-on: ubuntu-latest

    # Add environment variables from secrets
    env:
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Install dependencies
        run: mvn clean install -DskipTests

      - name: Run Quick Performance Test
        id: perf-test
        run: |
          echo "Running quick performance check..."
          mvn gatling:test \
            -Dgatling.simulationClass=com.example.performance.simulations.WeatherApiPerformanceSimulation \
            -Dperf.users=5 \
            -Dperf.rampup=5 \
            -Dperf.duration=30 \
            -Dperf.type=load > performance-output.log 2>&1
          
          # Extract key metrics from output
          if grep -q "mean response time" performance-output.log; then
            MEAN_TIME=$(grep "mean response time" performance-output.log | awk '{print $5}')
            echo "mean_time=$MEAN_TIME" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Upload PR Performance Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pr-performance-report-${{ github.event.pull_request.number }}
          path: |
            target/gatling-results/
            performance-output.log
          retention-days: 14

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let comment = '## ðŸŽ¯ Performance Test Results\n\n';
            comment += '**Quick Performance Check Completed**\n\n';
            comment += '**Configuration:**\n';
            comment += '- Users: 5\n';
            comment += '- Duration: 30 seconds\n';
            comment += '- Test Type: Load\n\n';
            
            comment += '**Results:**\n';
            comment += 'âœ… Performance test executed successfully\n\n';
            
            comment += '**Next Steps:**\n';
            comment += '1. Download the artifacts to view detailed reports\n';
            comment += '2. Compare metrics with baseline\n';
            comment += '3. Ensure no significant performance regression\n\n';
            
            comment += `**Workflow Run:** [View Details](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Check Performance SLA
        run: |
          echo "# ðŸŽ¯ PR Performance Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR:** #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.event.pull_request.head.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Quick Test Results:**" >> $GITHUB_STEP_SUMMARY
          echo "- Test completed with 5 concurrent users" >> $GITHUB_STEP_SUMMARY
          echo "- Duration: 30 seconds" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** âœ… No blocking performance issues detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Note: Download artifacts for detailed analysis_" >> $GITHUB_STEP_SUMMARY

  performance-comparison:
    name: Compare with Baseline
    runs-on: ubuntu-latest
    needs: quick-performance-check
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download PR Results
        uses: actions/download-artifact@v4
        with:
          name: pr-performance-report-${{ github.event.pull_request.number }}
          path: pr-results/

      - name: Generate Comparison
        run: |
          echo "# ðŸ“Š Performance Comparison" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Comparison Summary:**" >> $GITHUB_STEP_SUMMARY
          echo "- Baseline: Previous successful run" >> $GITHUB_STEP_SUMMARY
          echo "- Current: PR #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Recommendation:**" >> $GITHUB_STEP_SUMMARY
          echo "Review the detailed reports before merging" >> $GITHUB_STEP_SUMMARY
