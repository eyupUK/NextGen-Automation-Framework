name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Run API Tests
        id: test
        continue-on-error: true
        run: |
          mvn -B -ntp clean test \
          -DWEATHER_API_KEY="${WEATHER_API_KEY}" \
          -Dcucumber.features=src/test/resources/features/api
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Rerun failed scenarios (if any)
        id: rerun
        if: ${{ steps.test.conclusion == 'failure' }}
        run: |
          if [ -f target/rerun.txt ]; then
            echo "Found rerun file: target/rerun.txt"
            mvn -B -ntp \
              -DWEATHER_API_KEY="${WEATHER_API_KEY}" \
              -Dtest=FailedTestRunner test
          else
            echo "No rerun file found; cannot re-run failed scenarios. Marking job as failed."
            exit 1
          fi
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Upload API Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-reports
          path: |
            target/cucumber-report.html
            target/cucumber-html-reports/**/*
            target/surefire-reports/**/*
            target/rerun.txt
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload API Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-allure-results
          path: target/allure-results/**
          if-no-files-found: ignore
          retention-days: 14

      - name: Finalize job status (API)
        if: always()
        run: |
          if [ "${{ steps.test.conclusion }}" = "failure" ]; then
            if [ "${{ steps.rerun.conclusion }}" != "success" ]; then
              echo "API tests failed and rerun did not succeed. Failing job." && exit 1
            fi
          fi

      - name: Suite Summary - API
        if: always()
        env:
          TEST_CONCLUSION: ${{ steps.test.conclusion }}
          RERUN_CONCLUSION: ${{ steps.rerun.conclusion }}
        run: |
          if [ "$TEST_CONCLUSION" = "success" ]; then
            RESULT="success"; NOTE="(initial run)"
          elif [ "$RERUN_CONCLUSION" = "success" ]; then
            RESULT="success"; NOTE="(after rerun)"
          else
            RESULT="failure"; NOTE=""
          fi
          echo "# 🥒 Cucumber Summary - API" >> $GITHUB_STEP_SUMMARY
          echo "Result: ${RESULT} ${NOTE}" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts: api-test-reports, api-allure-results" >> $GITHUB_STEP_SUMMARY

  ui-tests:
    name: UI Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Run UI Tests (Headless Chrome)
        id: test
        continue-on-error: true
        run: |
          mkdir -p "$RUNNER_TEMP/chrome"
          mvn -B -ntp clean test \
          -DWEATHER_API_KEY="${WEATHER_API_KEY}" \
          -Dcucumber.features=src/test/resources/features/ui \
          -Dbrowser=chrome-headless
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Rerun failed scenarios (if any)
        id: rerun
        if: ${{ steps.test.conclusion == 'failure' }}
        run: |
          if [ -f target/rerun.txt ]; then
            echo "Found rerun file: target/rerun.txt"
            mvn -B -ntp \
              -DWEATHER_API_KEY="${WEATHER_API_KEY}" \
              -Dbrowser=chrome-headless \
              -Dtest=FailedTestRunner test
          else
            echo "No rerun file found; cannot re-run failed scenarios. Marking job as failed."
            exit 1
          fi
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Upload UI Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-reports
          path: |
            target/cucumber-report.html
            target/cucumber-html-reports/**/*
            target/surefire-reports/**/*
            target/rerun.txt
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload UI Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-allure-results
          path: target/allure-results/**
          if-no-files-found: ignore
          retention-days: 14

      - name: Upload Screenshots (if present)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ui-screenshots
          path: |
            target/screenshots/**/*
            target/*.png
          if-no-files-found: ignore
          retention-days: 7

      - name: Finalize job status (UI)
        if: always()
        run: |
          if [ "${{ steps.test.conclusion }}" = "failure" ]; then
            if [ "${{ steps.rerun.conclusion }}" != "success" ]; then
              echo "UI tests failed and rerun did not succeed. Failing job." && exit 1
            fi
          fi

      - name: Suite Summary - UI
        if: always()
        env:
          TEST_CONCLUSION: ${{ steps.test.conclusion }}
          RERUN_CONCLUSION: ${{ steps.rerun.conclusion }}
        run: |
          if [ "$TEST_CONCLUSION" = "success" ]; then
            RESULT="success"; NOTE="(initial run)"
          elif [ "$RERUN_CONCLUSION" = "success" ]; then
            RESULT="success"; NOTE="(after rerun)"
          else
            RESULT="failure"; NOTE=""
          fi
          echo "# 🥒 Cucumber Summary - UI" >> $GITHUB_STEP_SUMMARY
          echo "Result: ${RESULT} ${NOTE}" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts: ui-test-reports, ui-allure-results (see ui-screenshots if present)" >> $GITHUB_STEP_SUMMARY

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Run Accessibility Suite (Headless Chrome)
        id: test
        continue-on-error: true
        run: |
          mvn -B -ntp clean test \
            -Dcucumber.features=src/test/resources/features/accessibility \
            -Dbrowser=chrome-headless

      - name: Upload Accessibility Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-reports
          path: |
            target/cucumber-accessibility-report.html
            target/cucumber-accessibility.json
            target/surefire-reports/**/*
            target/accessibility/**/*
          if-no-files-found: ignore
          retention-days: 14

      - name: Finalize job status (Accessibility)
        if: always()
        run: |
          if [ "${{ steps.test.conclusion }}" != "success" ]; then
            echo "Accessibility tests failed. Failing job." && exit 1
          fi

      - name: Suite Summary - Accessibility
        if: always()
        env:
          TEST_CONCLUSION: ${{ steps.test.conclusion }}
        run: |
          echo "# 🥒 Cucumber Summary - Accessibility" >> $GITHUB_STEP_SUMMARY
          echo "Result: ${TEST_CONCLUSION}" >> $GITHUB_STEP_SUMMARY
          echo "Artifacts: accessibility-reports" >> $GITHUB_STEP_SUMMARY

  allure-report:
    name: Build Allure Report
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]
    if: always()
    steps:
      - name: Download API Allure Results
        uses: actions/download-artifact@v4
        with:
          name: api-allure-results
          path: allure-input/api
        continue-on-error: true

      - name: Download UI Allure Results
        uses: actions/download-artifact@v4
        with:
          name: ui-allure-results
          path: allure-input/ui
        continue-on-error: true

      - name: Merge allure results
        id: merge
        run: |
          mkdir -p allure-results
          COPIED=0
          for d in allure-input/*; do
            if [ -d "$d" ] && [ "$(ls -A "$d" 2>/dev/null)" ]; then
              cp -R "$d"/* allure-results/ 2>/dev/null || true
              COPIED=1
            fi
          done
          if [ "$COPIED" -eq 0 ]; then
            echo "no_results=true" >> $GITHUB_OUTPUT
          else
            echo "no_results=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate Allure report
        if: steps.merge.outputs.no_results == 'false'
        uses: simple-elf/allure-report-action@v1.7
        with:
          allure_results: allure-results
          allure_report: allure-report

      - name: Create placeholder report when no results
        if: steps.merge.outputs.no_results == 'true'
        run: |
          mkdir -p allure-report
          cat > allure-report/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <title>Allure Report</title>
          <h1>No Allure results were found</h1>
          <p>Run the API/UI tests to produce allure-results.</p>
          HTML

      - name: Upload Allure Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: allure-report

  deploy-pages:
    name: Publish Allure to GitHub Pages
    runs-on: ubuntu-latest
    needs: allure-report
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests, accessibility-tests]
    if: always()
    timeout-minutes: 5

    steps:
      - name: Generate Summary
        env:
          EVENT_NAME: ${{ github.event_name }}
          GIT_REF: ${{ github.ref }}
          REPO: ${{ github.repository }}
        run: |
          echo "# 🎯 Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.api-tests.result }}" == "success" ]; then
            echo "✅ **API Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **API Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.ui-tests.result }}" == "success" ]; then
            echo "✅ **UI Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **UI Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${{ needs.accessibility-tests.result }}" == "success" ]; then
            echo "✅ **Accessibility Tests**: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Accessibility Tests**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- API Test Reports: \`api-test-reports\`" >> $GITHUB_STEP_SUMMARY
          echo "- API Allure Results: \`api-allure-results\`" >> $GITHUB_STEP_SUMMARY
          echo "- UI Test Reports: \`ui-test-reports\`" >> $GITHUB_STEP_SUMMARY
          echo "- UI Allure Results: \`ui-allure-results\`" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility Reports: \`accessibility-reports\`" >> $GITHUB_STEP_SUMMARY

          # Link to Pages if this is a main push; otherwise inform where to find report
          OWNER=${REPO%%/*}
          NAME=${REPO##*/}
          if [ "$EVENT_NAME" = "push" ] && [ "$GIT_REF" = "refs/heads/main" ]; then
            echo "- Allure Report (GitHub Pages): https://${OWNER}.github.io/${NAME}/" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Allure Report: (published only on push to main). You can preview the generated report artifact from the 'Build Allure Report' job." >> $GITHUB_STEP_SUMMARY
          fi

          # Fail if any job failed
          if [ "${{ needs.api-tests.result }}" != "success" ] || [ "${{ needs.ui-tests.result }}" != "success" ] || [ "${{ needs.accessibility-tests.result }}" != "success" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "⚠️ **Some tests failed. Please review the artifacts for details.**" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
