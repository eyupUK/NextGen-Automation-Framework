<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.eyup</groupId>
    <artifactId>cucumber-selenium-rest_assured-gatling</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.release>21</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <restassured.version>5.5.6</restassured.version>
        <cucumber.version>6.11.0</cucumber.version>
        <selenium.version>4.25.0</selenium.version>
        <junit.version>4.13.2</junit.version>
        <opencsv.version>5.12.0</opencsv.version>
        <jackson.version>2.20.0</jackson.version>
        <!-- Align Gatling libs with Maven plugin to avoid CLI arg mismatch -->
        <gatling.version>3.9.5</gatling.version>
        <gatling-maven-plugin.version>4.8.2</gatling-maven-plugin.version>
        <axe.version>4.10.2</axe.version>
        <!-- Allow CI tag selection; empty by default -->
        <cucumber.filter.tags></cucumber.filter.tags>
        <!-- Security gate plugin versions -->
        <dependency-check-maven.version>10.0.4</dependency-check-maven.version>
        <spotbugs-maven-plugin.version>4.8.6.5</spotbugs-maven-plugin.version>
        <findsecbugs.version>1.12.0</findsecbugs.version>
        <!-- License and SBOM -->
        <license-maven-plugin.version>2.0.0</license-maven-plugin.version>
        <cyclonedx-maven-plugin.version>2.7.9</cyclonedx-maven-plugin.version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <!-- 'target' (project.build.directory) is cleaned by default; below cleans extra dirs if present -->
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}/allure-results</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                        <fileset>
                            <directory>${project.basedir}/allure-report</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <!-- Enforce Java toolchain and optional snapshot bans -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>3.4.1</version>
                <executions>
                    <execution>
                        <id>enforce-java</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <fail>true</fail>
                            <rules>
                                <requireJavaVersion>
                                    <version>[21,22)</version>
                                    <message>Java 21 is required to build and run this project.</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <parallel>classesAndMethods</parallel>
                    <useUnlimitedThreads>true</useUnlimitedThreads>
                    <!--                    <threadCount>4</threadCount>-->
                    <perCoreThreadCount>false</perCoreThreadCount>
                    <includes>
                        <include>**/*AllCukesRunner.java</include>
                    </includes>
                    <excludes>
                        <!-- Exclude rerun runner from default test phase to avoid missing rerun.txt failures -->
                        <exclude>**/FailedTestRunner.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <!-- Headless mode toggle: -Dheadless=true -->
                        <!--                        <headless>${headless}</headless>-->
                        <!-- CI tag selection: override with -Dcucumber.filter.tags=@jwt or via profile -->
                        <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
                        <!-- Force Allure adapter to write to the standard results directory -->
                        <allure.results.directory>${project.build.directory}/allure-results</allure.results.directory>
                    </systemPropertyVariables>
                    <!-- Exclude performance tests from regular test runs -->
                    <!--                    <excludes>-->
                    <!--                        <exclude>**/performance/**</exclude>-->
                    <!--                    </excludes>-->
                </configuration>
            </plugin>

            <!-- Gatling Maven Plugin for Performance Testing -->
            <plugin>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-maven-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>com.example.performance.gatling.simulations.WeatherApiPerformanceSimulation</include>
                        <include>com.example.performance.gatling.simulations.EcommerceApiPerformanceSimulation</include>
                    </includes>
                    <resultsFolder>${project.build.directory}/gatling-results</resultsFolder>
                    <failOnError>true</failOnError>
                    <!-- Open JDK modules required by Gatling internals when running on JDK 17+ -->
                    <jvmArgs>
                        <jvmArg>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/java.util=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.10.0</version>
                <configuration>
                    <reportVersion>2.6.0</reportVersion>
                    <resultsDirectory>${project.build.directory}/allure-results</resultsDirectory>
                    <reportDirectory>${project.build.directory}/allure-report</reportDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <!-- Security Gate Plugins (baseline configuration; executions bound via profile "security-gate") -->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <autoUpdate>false</autoUpdate>
                    <!-- Fail build on Critical CVEs (CVSS v3 >= 9.0) -->
                    <failBuildOnCVSS>9.0</failBuildOnCVSS>
                    <!-- Include test scoped dependencies as this is a test-focused project -->
                    <skipTestScope>false</skipTestScope>
                    <formats>HTML,JSON</formats>
                    <outputDirectory>${project.build.directory}/dependency-check-report</outputDirectory>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.h3xstream.findsecbugs</groupId>
                        <artifactId>findsecbugs-plugin</artifactId>
                        <version>${findsecbugs.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <effort>Max</effort>
                    <!-- Only report high priority findings; fail if any -->
                    <threshold>High</threshold>
                    <failOnError>true</failOnError>
                    <includeTests>true</includeTests>
                    <xmlOutput>true</xmlOutput>
                    <outputDirectory>${project.build.directory}/spotbugs</outputDirectory>
                    <!-- Focus on security issues -->
                    <includeFilterFile>${project.basedir}/config/spotbugs-include.xml</includeFilterFile>
                </configuration>
            </plugin>

            <!-- License and SBOM plugins (executions configured in profile) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>${cyclonedx-maven-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-picocontainer</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>3.9.4</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/net.masterthought/maven-cucumber-reporting -->
        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>maven-cucumber-reporting</artifactId>
            <version>5.6.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>
        <!-- Optional: reduce CDP warnings for Chrome 141. Uncomment if desired. -->
        <!--
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-devtools-v141</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.11.0</version>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Rest Assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restassured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${restassured.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Assertions -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- OpenCSV for CSV handling -->
        <dependency>
            <groupId>com.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>${opencsv.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.rest-assured/json-schema-validator -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>4.3.2</version>
        </dependency>


        <dependency>
            <groupId>me.jvt.cucumber</groupId>
            <artifactId>reporting-plugin</artifactId>
            <version>5.3.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.qameta.allure/allure-cucumber6-jvm -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-cucumber6-jvm</artifactId>
            <version>2.21.0</version>
            <scope>test</scope>
        </dependency>

        <!-- it is ignoring slf4j logs  https://mvnrepository.com/artifact/org.slf4j/slf4j-nop -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>2.0.5</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>5.10.1</version>
        </dependency>

        <!-- Performance Testing Dependencies -->
        <!-- Gatling for Performance Testing -->
        <dependency>
            <groupId>io.gatling.highcharts</groupId>
            <artifactId>gatling-charts-highcharts</artifactId>
            <version>${gatling.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Apache HTTP Client for custom performance utilities -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>5.3</version>
            <scope>test</scope>
        </dependency>

        <!-- Metrics for performance monitoring -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
            <version>4.2.25</version>
            <scope>test</scope>
        </dependency>

        <!-- Accessibility: axe-core selenium integration -->
        <dependency>
            <groupId>com.deque.html.axe-core</groupId>
            <artifactId>selenium</artifactId>
            <version>${axe.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Pact Consumer Testing Dependencies -->
        <dependency>
            <groupId>au.com.dius.pact.consumer</groupId>
            <artifactId>junit</artifactId>
            <version>4.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>au.com.dius.pact.core</groupId>
            <artifactId>model</artifactId>
            <version>4.1.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>au.com.dius.pact.core</groupId>
            <artifactId>support</artifactId>
            <version>4.1.11</version>
            <scope>test</scope>
        </dependency>
        <!-- Removed JUnit 5 to avoid engine conflicts during Pact runs -->
    </dependencies>

    <profiles>
        <profile>
            <id>jwt-only</id>
            <properties>
                <cucumber.filter.tags>@jwt</cucumber.filter.tags>
            </properties>
        </profile>
        <profile>
            <id>jwt-negative</id>
            <properties>
                <!--suppress UnresolvedMavenProperty -->
                <cucumber.filter.tags>@jwt and @negative</cucumber.filter.tags>
            </properties>
        </profile>
        <profile>
            <id>contract</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.2.5</version>
                        <configuration>
                            <includes>
                                <include>**/*PactTest.java</include>
                            </includes>
                            <!-- Disable parallelism for Pact tests to avoid cross-test interference -->
                            <parallel>none</parallel>
                            <useUnlimitedThreads>false</useUnlimitedThreads>
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <forkCount>1</forkCount>
                            <reuseForks>false</reuseForks>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Deterministic UI demo: runs @demo with headless Chrome and in-process mock server -->
        <profile>
            <id>demo</id>
            <properties>
                <cucumber.filter.tags>@demo</cucumber.filter.tags>
                <headless>true</headless>
                <browser>chrome</browser>
                <demo.mock>true</demo.mock>
                <demo.mock.api>true</demo.mock.api>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.2.5</version>
                        <configuration>
                            <systemPropertyVariables>
                                <cucumber.filter.tags>${cucumber.filter.tags}</cucumber.filter.tags>
                                <headless>${headless}</headless>
                                <browser>${browser}</browser>
                                <demo.mock>${demo.mock}</demo.mock>
                                <demo.mock.api>${demo.mock.api}</demo.mock.api>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Security Gate: run static analysis, dependency vulnerability and license checks before tests in CI/local -->
        <profile>
            <id>security-gate</id>
            <properties>
                <security.failOnCvss>9.0</security.failOnCvss>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <version>${dependency-check-maven.version}</version>
                        <configuration>
                            <autoUpdate>false</autoUpdate>
                            <failBuildOnCVSS>9.0</failBuildOnCVSS>
                        </configuration>
                        <executions>
                            <execution>
                                <id>dc-validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${spotbugs-maven-plugin.version}</version>
                        <configuration>
                            <includeTests>true</includeTests>
                            <threshold>High</threshold>
                            <failOnError>true</failOnError>
                        </configuration>
                        <executions>
                            <execution>
                                <id>spotbugs-validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>spotbugs</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${license-maven-plugin.version}</version>
                        <configuration>
                            <verbose>true</verbose>
                            <addThirdParty>true</addThirdParty>
                            <useMissingFile>true</useMissingFile>
                            <failOnMissing>true</failOnMissing>
                            <thirdPartyFilename>THIRD-PARTY.txt</thirdPartyFilename>
                            <thirdPartyLicenseFilename>THIRD-PARTY.json</thirdPartyLicenseFilename>
                            <outputDirectory>${project.build.directory}/generated-sources/license</outputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>license-third-party</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>aggregate-add-third-party</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.cyclonedx</groupId>
                        <artifactId>cyclonedx-maven-plugin</artifactId>
                        <version>${cyclonedx-maven-plugin.version}</version>
                        <configuration>
                            <schemaVersion>1.5</schemaVersion>
                            <includeBomSerialNumber>true</includeBomSerialNumber>
                            <outputFormat>json</outputFormat>
                            <outputName>bom</outputName>
                            <skipNotReachableLicenses>false</skipNotReachableLicenses>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-sbom</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>makeAggregateBom</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Rerun failed scenarios only; ensures rerun.txt exists to avoid parse errors -->
        <profile>
            <id>rerun-failed</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>prepare-rerun-file</id>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${project.build.directory}"/>
                                        <touch file="${project.build.directory}/rerun.txt"/>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>3.2.5</version>
                        <configuration>
                            <includes>
                                <include>**/FailedTestRunner.java</include>
                            </includes>
                            <excludes>
                                <!-- Allow only the rerun runner in this profile -->
                                <exclude>**/*AllCukesRunner.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ci-strict</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>3.4.1</version>
                        <executions>
                            <execution>
                                <id>enforce-maven-and-no-snapshots</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <fail>true</fail>
                                    <rules>
                                        <requireMavenVersion>
                                            <version>[3.9,)</version>
                                            <message>Maven 3.9+ is required on CI.</message>
                                        </requireMavenVersion>
                                        <requireReleaseDeps>
                                            <message>Snapshot dependencies are banned on CI.</message>
                                        </requireReleaseDeps>
                                        <requireReleaseVersion>
                                            <message>Project version must not be a SNAPSHOT on CI.</message>
                                        </requireReleaseVersion>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
